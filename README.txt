Python course Mandelbrot Set

This repository contains a package 'mandelbrot' that attempts to compare different optimisation techniques in the python programming language. The Mandelbrot set -- after Benoit Mandelbrot -- is generated by the following iterative algorithm

z_{i+1} = z^2 + c

for complex number z, complex starting value c and iteration number i. The iterations continue until i > I, where I is the maximum number of iterations, or |z_{i+1}|
> T for threshold T. The value saved is the number of iterations it took before either of these conditions were not met anymore over the number of iterations:

(i+1)/I

The function implementing the Mandelbrot set thus returns a value between 0 and 1; the closer the value is to 0, the earlier the iteration surpassed the threshold and the more 'unstable' the starting value c is. If the maximum number of iterations is reached the starting value is considered stable and a part of the Mandelbrot set.

Much more details are given in the files themselves and in doc/_build/html/index.html.

The contents of the package are structured as follows:

- mandelbrot_alg.py: contains the iterative algorithms with different optimisation strategies

- optimisation_methods.py: contains different functions that call the different algorithms in mandelbrot_alg.py that are optimised in different ways

- run.py: runs all functions in optimisation_methods.py and plots the results they return and saves these to the run_output/ folder. As all functions implement the same algorithm (just with a different optimisation strategy), the plots in run_output/ should be identical.

- benchmark.py: runs all functions in optimisation_methods.py -- similarly to run.py -- and times them. Results can be found in the benchmark_output/ folder.

- multiprocessing_mandelbrot.py: implements multiprocessing using the multiprocessing module. The results are plotted to the multiprocessing_output/ folder. 

- multiprocessing_output/plot_csv_results.py: a script that plots the number of processing units vs. the execution time and saves this to this folder. this folder as well

- plot_z_values.py: apart from plotting the mandelbrot set, this script saves the values for z right before the iteration stopped for all desired values of c, and plots this to a file in the plot_z_values_output/ folder.